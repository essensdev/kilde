---
import Layout from "../layouts/Layout.astro"
import Header from "../components/Header.astro"
import Tag from "../components/Tag.astro"

import { getCollection, getEntry, getEntries } from 'astro:content';

export async function getStaticPaths() {
  const entries = await getCollection('articles');
  return entries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}


const { entry } = Astro.props;
const { Content } = await entry.render();

const author = await getEntry(entry.data.author);
const related = await getEntries(entry.data.relatedArticles);
---
<Layout title={entry.data.title} desc={entry.data.description}>
   <article>
  <div class="tags-list">
  {
    entry.data.tags.map(tag => (
    <Tag title={tag} />
    ))
  }
  </div>
    <Header 
      title={entry.data.title}
      description={entry.data.description}
      author={author.data.name}
      created={entry.data.created.toISOString().slice(0, 10)}
      updated={entry.data.updated.toISOString().slice(0, 10)} />
    <Content />

  <div class="related">
  
    {related.length > 0 && (
      <>
        <h2 class="related-title">You might also like:</h2>
        <ul class="related-list">
          {related.map(p => (
            <li class="related-list-item"><a class="related-link" target="_blank" href={p.slug}>{p.data.title}</a></li>
          ))}
        </ul>
      </>
    )}
  </div>
 </article>
</Layout>
